"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è webhook Telegram –±–æ—Ç–∞
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –æ—à–∏–±–∫—É "webhook is active"
"""
import asyncio
import os
import sys
from aiogram import Bot
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('config.env')

BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

if not BOT_TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ config.env")
    sys.exit(1)


async def delete_webhook():
    """–£–¥–∞–ª–∏—Ç—å webhook"""
    bot = Bot(token=BOT_TOKEN)
    
    try:
        # –£–¥–∞–ª—è–µ–º webhook
        await bot.delete_webhook(drop_pending_updates=True)
        print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
        print("‚úÖ Pending updates –æ—á–∏—â–µ–Ω—ã!")
        print("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python telegram_bot.py")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook: {e}")
    finally:
        await bot.session.close()


if __name__ == "__main__":
    print("üîß –£–¥–∞–ª–µ–Ω–∏–µ webhook Telegram –±–æ—Ç–∞...\n")
    asyncio.run(delete_webhook())

