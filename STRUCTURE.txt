╔═══════════════════════════════════════════════════════════════════════════════╗
║                     📱 DEVICE MANAGER - СТРУКТУРА ПРОЕКТА                     ║
╚═══════════════════════════════════════════════════════════════════════════════╝

DeviceManager/
│
├── 📦 app/                              # Основное приложение
│   ├── __init__.py                      # Инициализация Python модуля
│   ├── main.py                          # ⭐ FastAPI сервер (главный файл)
│   ├── database.py                      # Работа с SQLite базой данных
│   ├── models.py                        # Pydantic модели
│   ├── telegram_bot.py                  # Telegram бот (команды, обработчики)
│   └── telegram_notifications.py        # Отправка уведомлений в Telegram
│
├── 🎨 templates/                        # HTML шаблоны
│   ├── index.html                       # Главная страница (список устройств)
│   └── device.html                      # Страница устройства (детали + SMS)
│
├── 📁 static/                           # Статические файлы (CSS, JS, изображения)
│   └── (пусто - резерв для будущих файлов)
│
├── 🐳 docker/                           # Docker конфигурация
│   ├── Dockerfile                       # Docker образ приложения
│   ├── docker-compose.yml               # Development окружение
│   ├── docker-compose.prod.yml          # Production с Nginx и SSL
│   └── nginx.conf                       # Конфигурация Nginx
│
├── 📚 docs/                             # Документация
│   ├── README.md                        # Основная документация проекта
│   ├── API_DOCUMENTATION.md             # ⭐ Полная документация API
│   ├── DOCKER_SETUP.md                  # Подробная инструкция по Docker
│   ├── README_DOCKER.md                 # Быстрый старт с Docker
│   └── TELEGRAM_BOT_SETUP.txt           # Настройка Telegram бота
│
├── 🔧 scripts/                          # Утилиты и скрипты
│   ├── deploy.sh                        # Автоматическое развертывание (Linux/Mac)
│   ├── setup.bat                        # Первоначальная настройка (Windows)
│   └── delete_webhook.py                # Удаление Telegram webhook
│
├── 💾 data/                             # База данных (создается автоматически)
│   └── devices.db                       # SQLite база данных
│
├── 📄 Корневые файлы
│   ├── README.md                        # ⭐ Главный README проекта
│   ├── PROJECT_STRUCTURE.md             # Подробное описание структуры
│   ├── STRUCTURE.txt                    # Этот файл (ASCII дерево)
│   ├── requirements.txt                 # Python зависимости
│   ├── config.env                       # ⚠️  Конфигурация (не коммитить!)
│   ├── config.env.example               # Пример конфигурации
│   ├── .gitignore                       # Git исключения
│   └── start.bat                        # ⭐ Быстрый запуск (Windows)
│
└── 🔒 Системные папки (игнорируются в Git)
    ├── venv/                            # Виртуальное окружение Python
    ├── __pycache__/                     # Скомпилированные Python файлы
    └── .idea/                           # PyCharm конфигурация

╔═══════════════════════════════════════════════════════════════════════════════╗
║                            🚀 БЫСТРЫЙ СТАРТ                                   ║
╚═══════════════════════════════════════════════════════════════════════════════╝

Windows:
    1. Запустите: start.bat
    2. Откройте: http://localhost:8000

Linux/Mac:
    1. Запустите: python app/main.py
    2. Откройте: http://localhost:8000

Docker:
    1. cd docker
    2. docker-compose up -d
    3. Откройте: http://localhost:8000

╔═══════════════════════════════════════════════════════════════════════════════╗
║                          📊 КЛЮЧЕВЫЕ КОМПОНЕНТЫ                               ║
╚═══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────────┐
│ app/main.py - FastAPI сервер                                                │
│ ├── POST /event              - Прием событий от Android                     │
│ ├── GET /devices             - Список всех устройств                        │
│ ├── GET /device/{id}         - Информация об устройстве                     │
│ ├── PUT /device/{id}/name    - Изменить имя устройства                      │
│ ├── GET /device/{id}/sms     - SMS устройства                               │
│ ├── POST /telegram/webhook   - Webhook для Telegram бота                    │
│ ├── GET /                    - Главная страница (HTML)                      │
│ └── GET /device-page/{id}    - Страница устройства (HTML)                   │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ app/database.py - Работа с базой данных                                     │
│ ├── init_database()          - Инициализация БД                             │
│ ├── save_event()             - Сохранить событие                            │
│ ├── update_device()          - Обновить устройство                          │
│ ├── save_sms()               - Сохранить SMS                                │
│ ├── get_all_devices()        - Получить все устройства                      │
│ ├── get_device_by_id()       - Получить устройство по ID                    │
│ ├── get_device_sms()         - Получить SMS устройства                      │
│ ├── add_device_binding()     - Привязать устройство к чату                  │
│ └── remove_device_binding()  - Отвязать устройство от чата                  │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ app/telegram_bot.py - Telegram бот                                          │
│ ├── /start                   - Приветствие и список устройств               │
│ ├── /devices                 - Показать все устройства                      │
│ ├── /add <device_id>         - Привязать устройство к чату                  │
│ ├── /remove <device_id>      - Отвязать устройство                          │
│ └── /list                    - Показать привязанные устройства              │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ templates/index.html - Главная страница                                     │
│ ├── Список всех устройств                                                   │
│ ├── Статус онлайн/оффлайн                                                   │
│ ├── Цветовая индикация батареи                                              │
│ ├── Автообновление каждые 10 секунд                                         │
│ └── Темная тема (Tailwind CSS)                                              │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ templates/device.html - Страница устройства                                 │
│ ├── Полная информация об устройстве                                         │
│ ├── Таблица SMS с раскрытием длинных сообщений                              │
│ ├── Редактирование имени устройства                                         │
│ ├── Автообновление каждые 10 секунд                                         │
│ └── Темная тема (Tailwind CSS)                                              │
└─────────────────────────────────────────────────────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════════╗
║                           💾 БАЗА ДАННЫХ                                      ║
╚═══════════════════════════════════════════════════════════════════════════════╝

data/devices.db (SQLite)
├── devices                      # Устройства
│   ├── id (TEXT, PRIMARY KEY)
│   ├── name (TEXT)
│   ├── battery (INTEGER)
│   ├── signal_strength (INTEGER)
│   ├── network_type (TEXT)
│   ├── internet (TEXT)
│   ├── last_seen (TEXT)
│   └── online (INTEGER)
│
├── events                       # Все события
│   ├── id (INTEGER, PRIMARY KEY)
│   ├── device_id (TEXT, FK)
│   ├── type (TEXT)
│   ├── timestamp (TEXT)
│   └── data (TEXT, JSON)
│
├── sms_logs                     # SMS сообщения
│   ├── id (INTEGER, PRIMARY KEY)
│   ├── device_id (TEXT, FK)
│   ├── timestamp (TEXT)
│   ├── sender (TEXT)
│   └── message (TEXT)
│
└── device_chat_bindings         # Привязки устройств к Telegram чатам
    ├── id (INTEGER, PRIMARY KEY)
    ├── device_id (TEXT, FK)
    ├── chat_id (INTEGER)
    └── created_at (TEXT)

╔═══════════════════════════════════════════════════════════════════════════════╗
║                          🔧 КОНФИГУРАЦИЯ                                      ║
╚═══════════════════════════════════════════════════════════════════════════════╝

config.env
├── TELEGRAM_BOT_TOKEN=...       # Токен от @BotFather
├── WEB_URL=...                  # URL веб-интерфейса
└── API_URL=...                  # URL API сервера

╔═══════════════════════════════════════════════════════════════════════════════╗
║                          📦 ЗАВИСИМОСТИ                                       ║
╚═══════════════════════════════════════════════════════════════════════════════╝

requirements.txt
├── fastapi==0.104.1             # Web framework
├── uvicorn==0.24.0              # ASGI server
├── pydantic==2.5.0              # Data validation
├── aiogram==3.4.1               # Telegram bot framework
├── aiohttp==3.9.1               # Async HTTP client
├── python-dotenv==1.0.0         # Environment variables
├── requests==2.31.0             # HTTP library
└── pytz==2024.1                 # Timezone support

╔═══════════════════════════════════════════════════════════════════════════════╗
║                        🎯 ТОЧКИ ВХОДА                                         ║
╚═══════════════════════════════════════════════════════════════════════════════╝

1. start.bat                     # Windows - быстрый запуск
2. python app/main.py            # Основной сервер
3. python app/telegram_bot.py    # Telegram бот (standalone)
4. cd docker && docker-compose up # Docker запуск

╔═══════════════════════════════════════════════════════════════════════════════╗
║                         📖 ДОКУМЕНТАЦИЯ                                       ║
╚═══════════════════════════════════════════════════════════════════════════════╝

README.md                        # Главная документация
PROJECT_STRUCTURE.md             # Подробное описание структуры
docs/API_DOCUMENTATION.md        # Полная документация API
docs/DOCKER_SETUP.md             # Docker инструкции
docs/README_DOCKER.md            # Docker быстрый старт
docs/TELEGRAM_BOT_SETUP.txt      # Настройка бота

╔═══════════════════════════════════════════════════════════════════════════════╗
║                      🔐 БЕЗОПАСНОСТЬ                                          ║
╚═══════════════════════════════════════════════════════════════════════════════╝

⚠️  НЕ КОММИТЬТЕ:
    ├── config.env               # Содержит токены!
    ├── devices.db               # База данных
    └── venv/                    # Виртуальное окружение

✅ В .gitignore добавлено:
    ├── config.env
    ├── *.db
    ├── venv/
    ├── __pycache__/
    └── .idea/

╔═══════════════════════════════════════════════════════════════════════════════╗
║                      🌟 ОСОБЕННОСТИ                                           ║
╚═══════════════════════════════════════════════════════════════════════════════╝

✨ FastAPI с автоматической документацией (/docs)
✨ SQLite - простая и быстрая БД
✨ Telegram бот с уведомлениями о SMS
✨ Красивый веб-интерфейс с Tailwind CSS
✨ Автообновление данных каждые 10 секунд
✨ Docker для легкого развертывания
✨ Webhook интеграция с Telegram
✨ Поддержка часовых поясов (UTC+5 Казахстан)
✨ Редактирование имен устройств через веб-интерфейс
✨ Раскрывающиеся длинные SMS сообщения
✨ Автоматическое определение статуса онлайн/оффлайн

╔═══════════════════════════════════════════════════════════════════════════════╗
║                      📞 ПОДДЕРЖКА                                             ║
╚═══════════════════════════════════════════════════════════════════════════════╝

Документация API:        http://localhost:8000/docs
Interactive API docs:    http://localhost:8000/redoc
Главная страница:        http://localhost:8000
Страница устройства:     http://localhost:8000/device-page/{device_id}

╔═══════════════════════════════════════════════════════════════════════════════╗
║                  Created with ❤️  using FastAPI & Python                      ║
╚═══════════════════════════════════════════════════════════════════════════════╝

